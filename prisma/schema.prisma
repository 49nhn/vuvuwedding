// This is your Prisma schema file,// learn more about it in the docs: https://pris.ly/d/prisma-schemagenerator client {  provider = "prisma-client-js"}datasource db {  provider = "postgresql"  url      = env("DATABASE_URL")}model User {  id          String       @id @default(cuid())  username    String       @unique @db.VarChar(30)  password    String       @db.VarChar(255)  avatar      String?      @db.VarChar(255)  createdAt   DateTime     @default(now())  deletedAt   DateTime?  isDeleted   Boolean      @default(false)  fullName    String?      @db.VarChar(30)  email       String?      @db.VarChar(30)  phone       String?      @db.VarChar(30)  address     String?      @db.VarChar(255)  salary      Float        @default(0)  bonus       Float        @default(0)  birthday    DateTime?  departments Department[]  roles       Role[]  Shows       Shows[]}model Role {  id          String       @id @default(cuid())  name        String       @unique @db.VarChar(60)  description String?      @db.VarChar(255)  permissions Permission[]  Users       User[]}model Permission {  id          String  @id @default(cuid())  name        String  @unique @db.VarChar(60)  description String? @db.VarChar(255)  Roles       Role[]}model Department {  id          String  @id @default(cuid())  name        String  @unique @db.VarChar(100)  description String? @db.VarChar(255)  users       User[]}model NumberingConfig {  id                String  @id @default(cuid())  name              String  @unique @db.VarChar(100)  paddingZeroNumber Int     @default(4) @db.SmallInt  prefix            String? @db.VarChar(30)  suffix            String? @db.VarChar(30)  currentNumber     Int     @default(0) @db.SmallInt}model Shows {  id              String           @id @default(cuid())  title           String           @db.VarChar(255)  status          Int              @default(0) @db.SmallInt // 0: chưa đặt cọc, 1: đã đặt cọc, 2: đã thanh toán, 3: đã hủy  deposits        Decimal          @default(0) @db.Money  totalPrice      Decimal          @default(0) @db.Money  balance         Decimal          @default(0) @db.Money  description     String?  brideName       String?          @db.VarChar(100)  bridePhone      String?          @db.VarChar(30)  brideAddress    String?          @db.VarChar(255)  groomName       String?          @db.VarChar(100)  groomPhone      String?          @db.VarChar(30)  groomAddress    String?          @db.VarChar(255)  otherContact    String?          @db.VarChar(255)  salesMan        User[]  decorations     Decoration[]  weddingPresents WeddingPresent[]  photos          Photo[]  makeups         Makeup[]  weddingDresses  WeddingDress[]  weddingFlowers  WeddingFlower[]  others          Other[]  createdAt       DateTime         @default(now())  createdBy       String?          @db.VarChar(30)  updatedAt       DateTime         @updatedAt  deletedAt       DateTime?  isDeleted       Boolean          @default(false)}model Decoration {  id            String    @id @default(cuid())  title         String    @db.VarChar(255)  description   String?  status        Int       @default(0) @db.SmallInt  ceremonyType  Int       @default(0) @db.SmallInt  price         Float     @default(0)  dateShowStart DateTime?  image         Image[]  packAncestralId String?  tone_rem        String? @db.VarChar(255)  tone_hoa        String? @db.VarChar(255)  so_phong        String? @db.VarChar(255)  ban_ghe         String? @db.VarChar(255)  ban_tho         String? @db.VarChar(255)  tru_qua         String? @db.VarChar(255)  khung           String? @db.VarChar(255)  cong            String? @db.VarChar(255)  chu_hy          String? @db.VarChar(255)  chai_nuoc       String? @db.VarChar(255)  cam_hoa         String? @db.VarChar(255)  den             String? @db.VarChar(255)  trai_ban        String? @db.VarChar(255)  lung_ghe        String? @db.VarChar(255)  rap             String? @db.VarChar(255)  ban_tron        String? @db.VarChar(255)  createdAt DateTime  @default(now())  updatedAt DateTime  @updatedAt  deletedAt DateTime?  isDeleted Boolean   @default(false)  Show      Shows?    @relation(fields: [showId], references: [id])  showId    String?}model Photo {  id            String    @id @default(cuid())  title         String    @db.VarChar(255)  description   String?  dateShowStart DateTime?  price         Float     @default(0)  status        Int       @default(0) @db.SmallInt  Show          Shows?    @relation(fields: [showId], references: [id])  showId        String?  image         Image[]}model WeddingPresent {  id            String    @id @default(cuid())  title         String    @db.VarChar(255)  description   String?  price         Float     @default(0)  dateShowStart DateTime?  status        Int       @default(0) @db.SmallInt  Show          Shows?    @relation(fields: [showId], references: [id])  showId        String?  image         Image[]}model Makeup {  id            String    @id @default(cuid())  title         String    @db.VarChar(255)  price         Float     @default(0)  dateShowStart DateTime?  description   String?  status        Int       @default(0) @db.SmallInt  Show          Shows?    @relation(fields: [showId], references: [id])  showId        String?  image         Image[]}model WeddingDress {  id            String    @id @default(cuid())  price         Float     @default(0)  title         String    @db.VarChar(255)  description   String?  dateShowStart DateTime?  status        Int       @default(0) @db.SmallInt  Show          Shows?    @relation(fields: [showId], references: [id])  showId        String?  image         Image[]}model WeddingFlower {  id            String    @id @default(cuid())  title         String    @db.VarChar(255)  price         Float     @default(0)  dateShowStart DateTime?  description   String?  status        Int       @default(0) @db.SmallInt  Show          Shows?    @relation(fields: [showId], references: [id])  showId        String?  image         Image[]}model Other {  id            String    @id @default(cuid())  title         String    @db.VarChar(255)  price         Float     @default(0)  description   String?  dateShowStart DateTime?  status        Int       @default(0) @db.SmallInt  Show          Shows?    @relation(fields: [showId], references: [id])  showId        String?  image         Image[]}model PackAncestral {  id             String  @id @default(cuid())  name           String  @db.VarChar(100)  flowerGateType Int     @default(0) @db.SmallInt // 0: không có cổng hoa, 1: cổng hoa lụa, 2: cổng hoa tươi  flower         Int     @default(0) @db.SmallInt // 0: không có hoa , 1: hoa lua 2:  hoa tươi  flowerTable    Int     @default(0) @db.SmallInt // 0: không có hoa , 1: hoa lua 2:  hoa tươi  priceStart     Float   @default(0)  priceEnd       Float   @default(0)  description    String? @db.VarChar(500)}model Inventory {  id         String     @id @default(cuid())  name       String     @unique @db.VarChar(100)  items      Item[]  categories Category[]}model Item {  id          String    @id @default(cuid())  name        String    @unique @db.VarChar(100)  quantity    Int       @default(0) @db.SmallInt  description String?   @db.VarChar(500)  consumable  Boolean   @default(false)  price       Float     @default(0)  inventory   Inventory @relation(fields: [inventoryId], references: [id], onDelete: NoAction, onUpdate: NoAction)  inventoryId String  category    Category  @relation(fields: [categoryId], references: [id], onDelete: NoAction, onUpdate: NoAction)  categoryId  String}model Category {  id          String    @id @default(cuid())  name        String    @unique @db.VarChar(100)  description String?   @db.VarChar(500)  inventory   Inventory @relation(fields: [inventoryId], references: [id])  inventoryId String  items       Item[]}model Image {  id               String          @id @default(cuid())  url              String          @unique  description      String?  createdAt        DateTime        @default(now())  updatedAt        DateTime        @updatedAt  Decoration       Decoration?     @relation(fields: [decorationId], references: [id])  decorationId     String?  Photo            Photo?          @relation(fields: [photoId], references: [id])  photoId          String?  WeddingPresent   WeddingPresent? @relation(fields: [weddingPresentId], references: [id])  weddingPresentId String?  Makeup           Makeup?         @relation(fields: [makeupId], references: [id])  makeupId         String?  WeddingDress     WeddingDress?   @relation(fields: [weddingDressId], references: [id])  weddingDressId   String?  WeddingFlower    WeddingFlower?  @relation(fields: [weddingFlowerId], references: [id])  weddingFlowerId  String?  Other            Other?          @relation(fields: [otherId], references: [id])  otherId          String?}